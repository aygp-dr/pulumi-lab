* README Publishing System

This project uses *org-mode* (=.org=) files as the canonical documentation format and automatically generates *Markdown* (=.md=) files for GitHub compatibility.

** üéØ Key Points

- ‚úÖ *README.org* is the source of truth
- ‚úÖ *README.md* is auto-generated (and git-ignored)
- ‚úÖ Uses *Python 3.11* and *Hy 1.0.0*
- ‚úÖ *EXPERIMENTAL* project status

** üìù Publishing Methods

*** Method 1: Emacs One-liner (Simplest)
#+begin_src bash
# Single file
emacs -Q --batch -l org README.org -f org-md-export-to-markdown

# All files
find . -name "README.org" -exec emacs -Q --batch -l org {} -f org-md-export-to-markdown \;
#+end_src

*** Method 2: Shell Script
#+begin_src bash
./scripts/publish-readme.sh
#+end_src

*** Method 3: Python with uv
#+begin_src bash
uv run scripts/publish-readme.py
#+end_src

*** Method 4: Make Target
#+begin_src bash
make publish-readme        # Shell script approach
make publish-readme-python # Python script approach
make watch-readme          # Auto-publish on changes (requires fswatch)
#+end_src

** üìã Badge Information

The main README.org includes these badges:

- [[https://img.shields.io/badge/status-experimental-orange.svg][Status]] *Experimental*
- [[https://img.shields.io/badge/python-3.11-blue.svg][Python]] *Python 3.11.11*
- [[https://img.shields.io/badge/hy-1.0.0-purple.svg][Hy]] *Hy 1.0.0*
- [[https://img.shields.io/badge/pulumi-latest-blueviolet.svg][Pulumi]] *Pulumi Latest*
- [[https://img.shields.io/badge/platform-FreeBSD-red.svg][Platform]] *FreeBSD 14.3*
- [[https://img.shields.io/badge/localstack-supported-green.svg][LocalStack]] *LocalStack*

** üîß Development Workflow

1. Edit =README.org= files
2. Run =make publish-readme= to generate =README.md=
3. =README.md= files are automatically git-ignored
4. Only commit =.org= files to version control

** üõ†Ô∏è Dependencies

- *Emacs*: Required for org-mode export
- *uv*: Python package management
- *fswatch*: Optional, for auto-publishing on file changes

** üé™ Integration with uv

The project uses uv for Python dependency management:

#+begin_src bash
# Install dependencies
uv sync

# Run with specific extras
uv sync --extra dev
uv sync --extra automation  
uv sync --extra policy

# Run publishing script
uv run scripts/publish-readme.py
#+end_src

This approach ensures that:
- Documentation stays in org-mode format (better for Emacs users)
- GitHub gets proper Markdown rendering
- No manual conversion needed
- Version control stays clean (no generated files)